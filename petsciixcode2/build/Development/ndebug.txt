**********************************
NLIB DEBUG OUTPUT BEGINS
NLIB version: 17.9
byteOrder tester=0 (big-endian)
****
Running on a powerpc macintosh...
****
os "MacOS" version: 8.10
Args:
init_fonts() called...
*** mysdl IMG_Init lying and saying we handle all formats...
*** mysdl SDL_OpenAudioDevice not implemented!
*** mysdl SDL_PauseAudioDevice not implemented!
*** mysdl SDL_CreateWindow copying mysdl_n_window...
*** mysdl SDL_SetVideoMode going to open_display...
Requesting display: 320x480x24
Going to GetGWorld()...
Going to GetGDevice()...
gdType is 2 gdMode is 0
Color mac screen has 16777216 colors...
n_display dump:
1024x768x32(32) planes=1 min/max=1/1 windowCount=0 chunky !origColors 
*** mysdl SDL_SetVideoMode going to open_window...
n_window dump:
320x480x32 planes=1 @0,0 chunky !colors 
*** mysdl SDL_SetVideoMode going to alloc_image for mysdl_surfbuffer...
create_image()...
bytesPerLine=40 height=480
alloc_plane() 0: 19200 bytes.
create_image(): NOTE: non-indexed
n_image dump:
320x480 d=32,np=1
@0,0
planeSize=19200 bpp=40
chunky no_palette drawable
Going to update_image()...
update_image()...
Warning, true color color image in update_image() not tested!
n_image dump:
320x480 d=32,np=1
@0,0
planeSize=19200 bpp=40
chunky no_palette drawable updated
(back from update_image)
n_image dump:
320x480 d=32,np=1
@0,0
planeSize=19200 bpp=40
chunky no_palette drawable updated
*** mysdl mySDL_InitSDL_Surface()...
*** mysdl mySDL_InitSDL_Surface_format()...
*** mysdl SDL_GetWindowSurface calling SDL_SetVideoMode...
*** mysdl SDL_CreateRGBSurface(0,440,224,32,...)...
*** mysdl mySDL_InitSDL_Surface()...
*** mysdl mySDL_InitSDL_Surface_format()...
*** mysdl SDL_CreateRGBSurface(0,1,1,32,...)...
*** mysdl mySDL_InitSDL_Surface()...
*** mysdl mySDL_InitSDL_Surface_format()...
*** mysdl IMG_Load('c64font.pcx')...
get_image_size("c64font.pcx")...
load_image_info("c64font.pcx")...
load_image_private("c64font.pcx")...
(info is TRUE)
magic is: 10 5 1 8
load_pcx_info("c64font.pcx")...
Size: 8,2048
hdr.nPlanes=1 hdr.bpp=8
d=8 np=1
bitmapType=1
version=5 paletteinfo=1
Back from load_pcx_info() *bitmapType is 1
read_image("c64font.pcx")...
Will load_image_info()...
load_image_info("c64font.pcx")...
load_image_private("c64font.pcx")...
(info is TRUE)
magic is: 10 5 1 8
load_pcx_info("c64font.pcx")...
Size: 8,2048
hdr.nPlanes=1 hdr.bpp=8
d=8 np=1
bitmapType=1
version=5 paletteinfo=1
Back from load_pcx_info() *bitmapType is 1
(back from load_image_info...)
read_image: bitmapType is 1
Will create_image()...
create_image()...
bytesPerLine=8 height=2048
alloc_plane() 0: 16384 bytes.
create_image(): NOTE: indexed color
n_image dump:
8x2048 d=8,np=1
@0,0
planeSize=16384 bpp=8
chunky numColors=256 drawable
Going to update_image()...
update_image()...
n_image dump:
8x2048 d=8,np=1
@0,0
planeSize=16384 bpp=8
chunky numColors=256 drawable updated
(back from update_image)
(back from create_image...)
Will load_image()...
load_image("c64font.pcx")...
load_image_private("c64font.pcx")...
(passed im)
magic is: 10 5 1 8
load_pcx("c64font.pcx")...
N_BITMAP_CHUNKY
(hdr.bytesperline=8)
(d=8 planes=1)
handle_pcx_body()...
h=2048 d=1 bpl=8 totalGuess=32768
Read 10711 bytes into temp buf.
tempTotal=32768 bpl=8
(about to free)
(pcx decoding done)
handle_pcx_cmap()...
Back from load_pcx() im->bitmapType is 1
(back from load_image...)
read_image: im->bitmapType is 1
Will convert_image()...
convert_image()...
*** n_exit_string...
convert_image() not fully implemented yet!
close_nlibs()...
free_image()...
free_palette()...
free_image()...
close_window()...
close_display()...
(close_nlibs done)
debug_shutdown()...
NLIB DEBUG OUTPUT ENDS
**********************************
