**********************************NLIB DEBUG OUTPUT BEGINSNLIB version: 17.9byteOrder tester=0 (big-endian)****Running on a macintosh...processor=3****os "MacOS" version: 9.22Args:init_fonts() called...*** mysdl IMG_Init lying and saying we handle all formats...*** mysdl SDL_OpenAudioDevice not implemented!*** mysdl SDL_PauseAudioDevice not implemented!*** mysdl SDL_CreateWindow copying mysdl_n_window...*** mysdl SDL_SetVideoMode going to open_display...Requesting display: 320x480x24Going to GetGDevice()...gdType is 0 gdMode is 128Color mac screen has 256 colors...Going to create_palette()...n_display dump:1680x1050x8(8) planes=1 min/max=1/1 windowCount=0 chunky origColors *** mysdl WARNING WARNING WARNING*** mysdl Display mode uses indexed colors, which is NOT supported!*** mysdl WARNING WARNING WARNING*** mysdl SDL_SetVideoMode going to open_window...n_palette dump:256 colors 48-bit mapper score n_window dump:308x476x8 planes=1 @0,0 chunky colors *** mysdl SDL_SetVideoMode going to alloc_image for mysdl_surfbuffer...create_image()...bytesPerLine=308 height=476alloc_plane() 0: 146608 bytes.create_image(): NOTE: indexed colorn_image dump:308x476 d=8,np=1@0,0planeSize=146608 bpp=308chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:308x476 d=8,np=1@0,0planeSize=146608 bpp=308chunky numColors=256 drawable updated(back from update_image)n_image dump:308x476 d=8,np=1@0,0planeSize=146608 bpp=308chunky numColors=256 drawable updated*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl SDL_GetWindowSurface calling SDL_SetVideoMode...*** mysdl SDL_CreateRGBSurface(0,440,224,32,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl SDL_CreateRGBSurface(0,1,1,32,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('c64font.pcx')...get_image_size("c64font.pcx")...load_image_info("c64font.pcx")...load_image_private("c64font.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("c64font.pcx")...Size: 8,2048hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("c64font.pcx")...Will load_image_info()...load_image_info("c64font.pcx")...load_image_private("c64font.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("c64font.pcx")...Size: 8,2048hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=8 height=2048alloc_plane() 0: 16384 bytes.create_image(): NOTE: indexed colorn_image dump:8x2048 d=8,np=1@0,0planeSize=16384 bpp=8chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:8x2048 d=8,np=1@0,0planeSize=16384 bpp=8chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("c64font.pcx")...load_image_private("c64font.pcx")...(passed im)magic is: 10 5 1 8load_pcx("c64font.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=8)(d=8 planes=1)handle_pcx_body()...h=2048 d=1 bpl=8 totalGuess=32768Read 10711 bytes into temp buf.tempTotal=32768 bpl=8(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:8x2048 d=8,np=1@0,0planeSize=16384 bpp=8chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)Doing extra set_palette...Attempted set locked d color0Attempted set locked d color255(read_image done)*** mysdl SDL_CreateRGBSurface(0,8,2048,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('tilesalpha.pcx')...get_image_size("tilesalpha.pcx")...load_image_info("tilesalpha.pcx")...load_image_private("tilesalpha.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("tilesalpha.pcx")...Size: 32,6072hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("tilesalpha.pcx")...Will load_image_info()...load_image_info("tilesalpha.pcx")...load_image_private("tilesalpha.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("tilesalpha.pcx")...Size: 32,6072hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=32 height=6072alloc_plane() 0: 194304 bytes.create_image(): NOTE: indexed colorn_image dump:32x6072 d=8,np=1@0,0planeSize=194304 bpp=32chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:32x6072 d=8,np=1@0,0planeSize=194304 bpp=32chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("tilesalpha.pcx")...load_image_private("tilesalpha.pcx")...(passed im)magic is: 10 5 1 8load_pcx("tilesalpha.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=32)(d=8 planes=1)handle_pcx_body()...h=6072 d=1 bpl=32 totalGuess=388608Read 16384 bytes into temp buf.Read 16384 bytes into temp buf.Read 16384 bytes into temp buf.Read 16384 bytes into temp buf.Read 16384 bytes into temp buf.Read 9504 bytes into temp buf.tempTotal=388608 bpl=32(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:32x6072 d=8,np=1@0,0planeSize=194304 bpp=32chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,32,6072,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('introscreen.pcx')...get_image_size("introscreen.pcx")...load_image_info("introscreen.pcx")...load_image_private("introscreen.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("introscreen.pcx")...Size: 320,200hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("introscreen.pcx")...Will load_image_info()...load_image_info("introscreen.pcx")...load_image_private("introscreen.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("introscreen.pcx")...Size: 320,200hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=320 height=200alloc_plane() 0: 64000 bytes.create_image(): NOTE: indexed colorn_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("introscreen.pcx")...load_image_private("introscreen.pcx")...(passed im)magic is: 10 5 1 8load_pcx("introscreen.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=320)(d=8 planes=1)handle_pcx_body()...h=200 d=1 bpl=320 totalGuess=128000Read 16384 bytes into temp buf.Read 13560 bytes into temp buf.tempTotal=128000 bpl=320(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,320,200,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('gamescreen.pcx')...get_image_size("gamescreen.pcx")...load_image_info("gamescreen.pcx")...load_image_private("gamescreen.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("gamescreen.pcx")...Size: 320,200hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("gamescreen.pcx")...Will load_image_info()...load_image_info("gamescreen.pcx")...load_image_private("gamescreen.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("gamescreen.pcx")...Size: 320,200hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=320 height=200alloc_plane() 0: 64000 bytes.create_image(): NOTE: indexed colorn_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("gamescreen.pcx")...load_image_private("gamescreen.pcx")...(passed im)magic is: 10 5 1 8load_pcx("gamescreen.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=320)(d=8 planes=1)handle_pcx_body()...h=200 d=1 bpl=320 totalGuess=128000Read 5932 bytes into temp buf.tempTotal=128000 bpl=320(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,320,200,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('gameover.pcx')...get_image_size("gameover.pcx")...load_image_info("gameover.pcx")...load_image_private("gameover.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("gameover.pcx")...Size: 320,200hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("gameover.pcx")...Will load_image_info()...load_image_info("gameover.pcx")...load_image_private("gameover.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("gameover.pcx")...Size: 320,200hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=320 height=200alloc_plane() 0: 64000 bytes.create_image(): NOTE: indexed colorn_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("gameover.pcx")...load_image_private("gameover.pcx")...(passed im)magic is: 10 5 1 8load_pcx("gameover.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=320)(d=8 planes=1)handle_pcx_body()...h=200 d=1 bpl=320 totalGuess=128000Read 15183 bytes into temp buf.tempTotal=128000 bpl=320(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:320x200 d=8,np=1@0,0planeSize=64000 bpp=320chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,320,200,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('items.pcx')...get_image_size("items.pcx")...load_image_info("items.pcx")...load_image_private("items.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("items.pcx")...Size: 48,126hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("items.pcx")...Will load_image_info()...load_image_info("items.pcx")...load_image_private("items.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("items.pcx")...Size: 48,126hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=48 height=126alloc_plane() 0: 6048 bytes.create_image(): NOTE: indexed colorn_image dump:48x126 d=8,np=1@0,0planeSize=6048 bpp=48chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:48x126 d=8,np=1@0,0planeSize=6048 bpp=48chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("items.pcx")...load_image_private("items.pcx")...(passed im)magic is: 10 5 1 8load_pcx("items.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=48)(d=8 planes=1)handle_pcx_body()...h=126 d=1 bpl=48 totalGuess=12096tempTotal=12096 bpl=48(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:48x126 d=8,np=1@0,0planeSize=6048 bpp=48chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,48,126,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('keys.pcx')...get_image_size("keys.pcx")...load_image_info("keys.pcx")...load_image_private("keys.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("keys.pcx")...Size: 16,42hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("keys.pcx")...Will load_image_info()...load_image_info("keys.pcx")...load_image_private("keys.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("keys.pcx")...Size: 16,42hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=16 height=42alloc_plane() 0: 672 bytes.create_image(): NOTE: indexed colorn_image dump:16x42 d=8,np=1@0,0planeSize=672 bpp=16chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:16x42 d=8,np=1@0,0planeSize=672 bpp=16chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("keys.pcx")...load_image_private("keys.pcx")...(passed im)magic is: 10 5 1 8load_pcx("keys.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=16)(d=8 planes=1)handle_pcx_body()...h=42 d=1 bpl=16 totalGuess=1344tempTotal=1344 bpl=16(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:16x42 d=8,np=1@0,0planeSize=672 bpp=16chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,16,42,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('health.pcx')...get_image_size("health.pcx")...load_image_info("health.pcx")...load_image_private("health.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("health.pcx")...Size: 48,306hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("health.pcx")...Will load_image_info()...load_image_info("health.pcx")...load_image_private("health.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("health.pcx")...Size: 48,306hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=48 height=306alloc_plane() 0: 14688 bytes.create_image(): NOTE: indexed colorn_image dump:48x306 d=8,np=1@0,0planeSize=14688 bpp=48chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:48x306 d=8,np=1@0,0planeSize=14688 bpp=48chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("health.pcx")...load_image_private("health.pcx")...(passed im)magic is: 10 5 1 8load_pcx("health.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=48)(d=8 planes=1)handle_pcx_body()...h=306 d=1 bpl=48 totalGuess=29376Read 8669 bytes into temp buf.tempTotal=29376 bpl=48(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:48x306 d=8,np=1@0,0planeSize=14688 bpp=48chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,48,306,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('faces.pcx')...get_image_size("faces.pcx")...load_image_info("faces.pcx")...load_image_private("faces.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("faces.pcx")...Size: 16,72hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("faces.pcx")...Will load_image_info()...load_image_info("faces.pcx")...load_image_private("faces.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("faces.pcx")...Size: 16,72hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=16 height=72alloc_plane() 0: 1152 bytes.create_image(): NOTE: indexed colorn_image dump:16x72 d=8,np=1@0,0planeSize=1152 bpp=16chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:16x72 d=8,np=1@0,0planeSize=1152 bpp=16chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("faces.pcx")...load_image_private("faces.pcx")...(passed im)magic is: 10 5 1 8load_pcx("faces.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=16)(d=8 planes=1)handle_pcx_body()...h=72 d=1 bpl=16 totalGuess=2304tempTotal=2304 bpl=16(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:16x72 d=8,np=1@0,0planeSize=1152 bpp=16chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,16,72,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('animtiles.pcx')...get_image_size("animtiles.pcx")...load_image_info("animtiles.pcx")...load_image_private("animtiles.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("animtiles.pcx")...Size: 24,576hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("animtiles.pcx")...Will load_image_info()...load_image_info("animtiles.pcx")...load_image_private("animtiles.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("animtiles.pcx")...Size: 24,576hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=24 height=576alloc_plane() 0: 13824 bytes.create_image(): NOTE: indexed colorn_image dump:24x576 d=8,np=1@0,0planeSize=13824 bpp=24chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:24x576 d=8,np=1@0,0planeSize=13824 bpp=24chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("animtiles.pcx")...load_image_private("animtiles.pcx")...(passed im)magic is: 10 5 1 8load_pcx("animtiles.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=24)(d=8 planes=1)handle_pcx_body()...h=576 d=1 bpl=24 totalGuess=27648Read 8525 bytes into temp buf.tempTotal=27648 bpl=24(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:24x576 d=8,np=1@0,0planeSize=13824 bpp=24chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,24,576,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl IMG_Load('spritesalpha.pcx')...get_image_size("spritesalpha.pcx")...load_image_info("spritesalpha.pcx")...load_image_private("spritesalpha.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("spritesalpha.pcx")...Size: 24,1992hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1read_image("spritesalpha.pcx")...Will load_image_info()...load_image_info("spritesalpha.pcx")...load_image_private("spritesalpha.pcx")...(info is TRUE)magic is: 10 5 1 8load_pcx_info("spritesalpha.pcx")...Size: 24,1992hdr.nPlanes=1 hdr.bpp=8d=8 np=1bitmapType=1version=5 paletteinfo=1Back from load_pcx_info() *bitmapType is 1(back from load_image_info...)read_image: bitmapType is 1Will create_image()...create_image()...bytesPerLine=24 height=1992alloc_plane() 0: 47808 bytes.create_image(): NOTE: indexed colorn_image dump:24x1992 d=8,np=1@0,0planeSize=47808 bpp=24chunky numColors=256 drawableGoing to update_image()...update_image()...n_image dump:24x1992 d=8,np=1@0,0planeSize=47808 bpp=24chunky numColors=256 drawable updated(back from update_image)(back from create_image...)Will load_image()...load_image("spritesalpha.pcx")...load_image_private("spritesalpha.pcx")...(passed im)magic is: 10 5 1 8load_pcx("spritesalpha.pcx")...N_BITMAP_CHUNKY(hdr.bytesperline=24)(d=8 planes=1)handle_pcx_body()...h=1992 d=1 bpl=24 totalGuess=95616Read 16384 bytes into temp buf.Read 13696 bytes into temp buf.tempTotal=95616 bpl=24(about to free)(pcx decoding done)handle_pcx_cmap()...Back from load_pcx() im->bitmapType is 1(back from load_image...)read_image: im->bitmapType is 1Will convert_image()...convert_image()...(palette matching not implemented!)(Going to call palette_24_to_48()...)(convert_image done)n_image dump:24x1992 d=8,np=1@0,0planeSize=47808 bpp=24chunky numColors=256 drawable updatedn_window dump:308x476x8 planes=1 @0,0 chunky colors (convert_image successful)Will update_image()...update_image()...(back from update_image...)(read_image done)*** mysdl SDL_CreateRGBSurface(0,24,1992,8,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...*** mysdl SDL_CreateRGBSurface(0,28,28,32,...)...*** mysdl mySDL_InitSDL_Surface()...*** mysdl mySDL_InitSDL_Surface_format()...